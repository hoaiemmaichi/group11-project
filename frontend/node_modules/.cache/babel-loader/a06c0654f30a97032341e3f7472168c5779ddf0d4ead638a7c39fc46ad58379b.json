{"ast":null,"code":"import axios from 'axios';\nconst API = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n// Theo d√µi tr·∫°ng th√°i refresh token ƒë·ªÉ tr√°nh g·ªçi nhi·ªÅu l·∫ßn\nlet isRefreshing = false;\nlet refreshSubscribers = [];\n\n// Th√™m subscriber v√†o h√†ng ƒë·ª£i\nfunction subscribeTokenRefresh(callback) {\n  refreshSubscribers.push(callback);\n}\n\n// Th·ª±c thi t·∫•t c·∫£ callback trong h√†ng ƒë·ª£i v·ªõi token m·ªõi\nfunction onRefreshed(token) {\n  refreshSubscribers.forEach(callback => callback(token));\n  refreshSubscribers = [];\n}\n\n// H√†m refresh token\nasync function refreshAuthToken() {\n  try {\n    console.log('üîÑ B·∫Øt ƒë·∫ßu refresh token...');\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (!refreshToken) {\n      console.log('‚ùå Kh√¥ng t√¨m th·∫•y refresh token trong localStorage');\n      throw new Error('No refresh token available');\n    }\n    console.log(`üì§ G·ª≠i refresh token c≈©: ${refreshToken.substring(0, 10)}...`);\n    const response = await axios.post(`${API}/auth/refresh`, {\n      refreshToken\n    });\n    const {\n      token: newAccessToken,\n      refreshToken: newRefreshToken\n    } = response.data;\n    console.log('‚úÖ Nh·∫≠n token m·ªõi t·ª´ server');\n\n    // L∆∞u tokens m·ªõi\n    localStorage.setItem('token', newAccessToken);\n    if (newRefreshToken) {\n      localStorage.setItem('refreshToken', newRefreshToken);\n      console.log(`üì• ƒê√£ l∆∞u refresh token m·ªõi: ${newRefreshToken.substring(0, 10)}...`);\n    }\n    console.log('‚úÖ Ho√†n t·∫•t refresh token');\n    return newAccessToken;\n  } catch (error) {\n    // X√≥a h·∫øt tokens n·∫øu refresh th·∫•t b·∫°i\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('currentUser');\n    throw error;\n  }\n}\n\n// Request interceptor: th√™m Authorization header t·ª´ localStorage\naxios.interceptors.request.use(config => {\n  try {\n    var _config$headers;\n    const token = localStorage.getItem('token');\n    if (token && !((_config$headers = config.headers) !== null && _config$headers !== void 0 && _config$headers.Authorization)) {\n      config.headers = config.headers || {};\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  } catch (e) {}\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor: x·ª≠ l√Ω 401 v√† refresh token\naxios.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n\n  // N·∫øu kh√¥ng ph·∫£i l·ªói 401 ho·∫∑c ƒë√£ th·ª≠ refresh r·ªìi, reject lu√¥n\n  if (!error.response || error.response.status !== 401 || originalRequest._retry) {\n    return Promise.reject(error);\n  }\n  originalRequest._retry = true;\n\n  // N·∫øu ƒëang refresh token r·ªìi th√¨ ƒë·ª£i k·∫øt qu·∫£\n  if (isRefreshing) {\n    try {\n      const token = await new Promise((resolve, reject) => {\n        subscribeTokenRefresh(token => {\n          if (token) resolve(token);else reject(new Error('Failed to refresh token'));\n        });\n      });\n      originalRequest.headers['Authorization'] = `Bearer ${token}`;\n      return axios(originalRequest);\n    } catch (err) {\n      window.location.href = '/login';\n      return Promise.reject(err);\n    }\n  }\n\n  // B·∫Øt ƒë·∫ßu refresh token\n  isRefreshing = true;\n  try {\n    const newToken = await refreshAuthToken();\n    originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\n    onRefreshed(newToken);\n    isRefreshing = false;\n    return axios(originalRequest);\n  } catch (refreshError) {\n    isRefreshing = false;\n    onRefreshed(null);\n    // Chuy·ªÉn v·ªÅ trang login n·∫øu refresh th·∫•t b·∫°i\n    window.location.href = '/login';\n    return Promise.reject(refreshError);\n  }\n});\nexport default axios;","map":{"version":3,"names":["axios","API","process","env","REACT_APP_API_URL","isRefreshing","refreshSubscribers","subscribeTokenRefresh","callback","push","onRefreshed","token","forEach","refreshAuthToken","console","log","refreshToken","localStorage","getItem","Error","substring","response","post","newAccessToken","newRefreshToken","data","setItem","error","removeItem","interceptors","request","use","config","_config$headers","headers","Authorization","e","Promise","reject","originalRequest","status","_retry","resolve","err","window","location","href","newToken","refreshError"],"sources":["D:/Downloads/group11-project1/group11-project1/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n// Theo d√µi tr·∫°ng th√°i refresh token ƒë·ªÉ tr√°nh g·ªçi nhi·ªÅu l·∫ßn\nlet isRefreshing = false;\nlet refreshSubscribers = [];\n\n// Th√™m subscriber v√†o h√†ng ƒë·ª£i\nfunction subscribeTokenRefresh(callback) {\n  refreshSubscribers.push(callback);\n}\n\n// Th·ª±c thi t·∫•t c·∫£ callback trong h√†ng ƒë·ª£i v·ªõi token m·ªõi\nfunction onRefreshed(token) {\n  refreshSubscribers.forEach(callback => callback(token));\n  refreshSubscribers = [];\n}\n\n// H√†m refresh token\nasync function refreshAuthToken() {\n  try {\n    console.log('üîÑ B·∫Øt ƒë·∫ßu refresh token...');\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (!refreshToken) {\n      console.log('‚ùå Kh√¥ng t√¨m th·∫•y refresh token trong localStorage');\n      throw new Error('No refresh token available');\n    }\n    console.log(`üì§ G·ª≠i refresh token c≈©: ${refreshToken.substring(0, 10)}...`);\n\n    const response = await axios.post(`${API}/auth/refresh`, { refreshToken });\n    const { token: newAccessToken, refreshToken: newRefreshToken } = response.data;\n    console.log('‚úÖ Nh·∫≠n token m·ªõi t·ª´ server');\n\n    // L∆∞u tokens m·ªõi\n    localStorage.setItem('token', newAccessToken);\n    if (newRefreshToken) {\n      localStorage.setItem('refreshToken', newRefreshToken);\n      console.log(`üì• ƒê√£ l∆∞u refresh token m·ªõi: ${newRefreshToken.substring(0, 10)}...`);\n    }\n    console.log('‚úÖ Ho√†n t·∫•t refresh token');\n\n    return newAccessToken;\n  } catch (error) {\n    // X√≥a h·∫øt tokens n·∫øu refresh th·∫•t b·∫°i\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('currentUser');\n    throw error;\n  }\n}\n\n// Request interceptor: th√™m Authorization header t·ª´ localStorage\naxios.interceptors.request.use((config) => {\n  try {\n    const token = localStorage.getItem('token');\n    if (token && !config.headers?.Authorization) {\n      config.headers = config.headers || {};\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  } catch (e) {}\n  return config;\n}, (error) => Promise.reject(error));\n\n// Response interceptor: x·ª≠ l√Ω 401 v√† refresh token\naxios.interceptors.response.use(\n  response => response,\n  async error => {\n    const originalRequest = error.config;\n    \n    // N·∫øu kh√¥ng ph·∫£i l·ªói 401 ho·∫∑c ƒë√£ th·ª≠ refresh r·ªìi, reject lu√¥n\n    if (!error.response || error.response.status !== 401 || originalRequest._retry) {\n      return Promise.reject(error);\n    }\n\n    originalRequest._retry = true;\n\n    // N·∫øu ƒëang refresh token r·ªìi th√¨ ƒë·ª£i k·∫øt qu·∫£\n    if (isRefreshing) {\n      try {\n        const token = await new Promise((resolve, reject) => {\n          subscribeTokenRefresh(token => {\n            if (token) resolve(token);\n            else reject(new Error('Failed to refresh token'));\n          });\n        });\n        \n        originalRequest.headers['Authorization'] = `Bearer ${token}`;\n        return axios(originalRequest);\n      } catch (err) {\n        window.location.href = '/login';\n        return Promise.reject(err);\n      }\n    }\n\n    // B·∫Øt ƒë·∫ßu refresh token\n    isRefreshing = true;\n\n    try {\n      const newToken = await refreshAuthToken();\n      originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\n      onRefreshed(newToken);\n      isRefreshing = false;\n      return axios(originalRequest);\n    } catch (refreshError) {\n      isRefreshing = false;\n      onRefreshed(null);\n      // Chuy·ªÉn v·ªÅ trang login n·∫øu refresh th·∫•t b·∫°i\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n);\n\nexport default axios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}